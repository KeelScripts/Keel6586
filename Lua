local library = {}

local ScreenGui = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Top = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local Title = Instance.new("TextLabel")
local TimeLabel = Instance.new("TextLabel")
local TabHolder = Instance.new("ScrollingFrame")
local TabList = Instance.new("UIListLayout")
local Container = Instance.new("Frame")
local TabContent = Instance.new("Frame")

ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.Name = "KavoUI"

Main.Name = "Main"
Main.Parent = ScreenGui
Main.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0, 10, 0.5, -150)
Main.Size = UDim2.new(0, 400, 0, 300)
Main.Active = true
Main.Draggable = true

Top.Name = "Top"
Top.Parent = Main
Top.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Top.Size = UDim2.new(1, 0, 0, 25)
Top.BorderSizePixel = 0
UICorner.CornerRadius = UDim.new(0, 4)
UICorner.Parent = Top

Title.Name = "Title"
Title.Parent = Top
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1
Title.Size = UDim2.new(0, 200, 1, 0)
Title.Font = Enum.Font.Gotham
Title.Text = "Krypton Mods"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 14
Title.Position = UDim2.new(0, 5, 0, 0)

TimeLabel.Name = "TimeLabel"
TimeLabel.Parent = Top
TimeLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TimeLabel.BackgroundTransparency = 1
TimeLabel.Size = UDim2.new(0, 100, 1, 0)
TimeLabel.Position = UDim2.new(1, -105, 0, 0)
TimeLabel.Font = Enum.Font.Gotham
TimeLabel.Text = "09:33 PM CDT, Jul 18, 2025"
TimeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
TimeLabel.TextSize = 12
TimeLabel.TextXAlignment = Enum.TextXAlignment.Right

TabHolder.Name = "TabHolder"
TabHolder.Parent = Main
TabHolder.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TabHolder.BorderSizePixel = 0
TabHolder.Position = UDim2.new(0, 0, 0, 25)
TabHolder.Size = UDim2.new(0, 100, 1, -25)
TabHolder.CanvasSize = UDim2.new(0, 0, 0, 0)
TabHolder.ScrollBarThickness = 4
TabHolder.ClipsDescendants = true

TabList.Name = "TabList"
TabList.Parent = TabHolder
TabList.FillDirection = Enum.FillDirection.Vertical
TabList.SortOrder = Enum.SortOrder.LayoutOrder
TabList.Padding = UDim.new(0, 2)

Container.Name = "Container"
Container.Parent = Main
Container.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Container.BorderSizePixel = 0
Container.Position = UDim2.new(0, 100, 0, 25)
Container.Size = UDim2.new(0, 300, 1, -25)

TabContent.Name = "TabContent"
TabContent.Parent = Container
TabContent.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TabContent.BorderSizePixel = 0
TabContent.Position = UDim2.new(0, 5, 0, 5)
TabContent.Size = UDim2.new(1, -10, 1, -10)
TabContent.ClipsDescendants = true

-- Key System with Notifications
local key = "KRYPTON"
local hasKey = false

if not hasKey then
    local KeyGui = Instance.new("ScreenGui")
    local KeyFrame = Instance.new("Frame")
    local KeyLabel = Instance.new("TextLabel")
    local KeyBox = Instance.new("TextBox")
    local SubmitButton = Instance.new("TextButton")
    local Notification = Instance.new("Frame")

    KeyGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    KeyFrame.Parent = KeyGui
    KeyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    KeyFrame.Size = UDim2.new(0, 200, 0, 100)
    KeyFrame.Position = UDim2.new(0.5, -100, 0.5, -50)
    KeyFrame.BorderSizePixel = 0

    KeyLabel.Parent = KeyFrame
    KeyLabel.BackgroundTransparency = 1
    KeyLabel.Size = UDim2.new(1, 0, 0, 20)
    KeyLabel.Text = "Enter Key:"
    KeyLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeyLabel.Font = Enum.Font.Gotham
    KeyLabel.TextSize = 14

    KeyBox.Parent = KeyFrame
    KeyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    KeyBox.Size = UDim2.new(0, 180, 0, 30)
    KeyBox.Position = UDim2.new(0.5, -90, 0, 30)
    KeyBox.Text = ""
    KeyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeyBox.Font = Enum.Font.Gotham
    KeyBox.TextSize = 14
    local KeyBoxCorner = Instance.new("UICorner")
    KeyBoxCorner.CornerRadius = UDim.new(0, 4)
    KeyBoxCorner.Parent = KeyBox

    SubmitButton.Parent = KeyFrame
    SubmitButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    SubmitButton.Size = UDim2.new(0, 80, 0, 30)
    SubmitButton.Position = UDim2.new(0.5, -40, 0, 65)
    SubmitButton.Text = "Submit"
    SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    SubmitButton.Font = Enum.Font.Gotham
    SubmitButton.TextSize = 14
    local SubmitCorner = Instance.new("UICorner")
    SubmitCorner.CornerRadius = UDim.new(0, 4)
    SubmitCorner.Parent = SubmitButton

    Notification.Name = "Notification"
    Notification.Parent = KeyGui
    Notification.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    Notification.Size = UDim2.new(0, 200, 0, 40)
    Notification.Position = UDim2.new(0.5, -100, 0.5, -100)
    Notification.Visible = false
    local NotifCorner = Instance.new("UICorner")
    NotifCorner.CornerRadius = UDim.new(0, 4)
    NotifCorner.Parent = Notification
    local NotifText = Instance.new("TextLabel")
    NotifText.Parent = Notification
    NotifText.BackgroundTransparency = 1
    NotifText.Size = UDim2.new(1, 0, 1, 0)
    NotifText.Text = ""
    NotifText.TextColor3 = Color3.fromRGB(255, 255, 255)
    NotifText.Font = Enum.Font.Gotham
    NotifText.TextSize = 14
    NotifText.TextWrapped = true

    SubmitButton.MouseButton1Click:Connect(function()
        if KeyBox.Text:upper() == key then
            hasKey = true
            Notification.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
            NotifText.Text = "Key Accepted!"
            Notification.Visible = true
            wait(1.5)
            Notification.Visible = false
            KeyGui:Destroy()
            Main.Visible = true
        else
            Notification.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
            NotifText.Text = "Incorrect Key!"
            Notification.Visible = true
            wait(1.5)
            Notification.Visible = false
        end
    end)

    Main.Visible = false
    wait(0.1) -- Allow GUI to render
end

function library:CreateWindow(title)
    Title.Text = title or "Krypton Mods"
    local Window = {Tabs = {}, ActiveTab = nil}

    function Window:CreateTab(tabName)
        local Tab = {}
        local TabButton = Instance.new("TextButton")
        local TabFrame = Instance.new("Frame")
        local TabLayout = Instance.new("UIListLayout")

        -- Tab Button
        TabButton.Name = "Tab_" .. tabName
        TabButton.Parent = TabHolder
        TabButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        TabButton.Size = UDim2.new(0, 90, 0, 40)
        TabButton.Font = Enum.Font.Gotham
        TabButton.Text = tabName
        TabButton.TextColor3 = Color3.fromRGB(200, 200, 200)
        TabButton.TextSize = 14
        TabButton.BackgroundTransparency = 0
        TabButton.BorderSizePixel = 0
        local Padding = Instance.new("UIPadding")
        Padding.Parent = TabButton
        Padding.PaddingLeft = UDim.new(0, 5)
        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 4)
        UICorner.Parent = TabButton

        -- Tab Frame
        TabFrame.Name = "Frame_" .. tabName
        TabFrame.Parent = TabContent
        TabFrame.BackgroundTransparency = 1
        TabFrame.Size = UDim2.new(1, 0, 1, 0)
        TabFrame.Visible = false
        TabLayout.Parent = TabFrame
        TabLayout.FillDirection = Enum.FillDirection.Vertical
        TabLayout.SortOrder = Enum.SortOrder.LayoutOrder
        TabLayout.Padding = UDim.new(0, 5)

        TabButton.MouseButton1Click:Connect(function()
            for _, tab in pairs(Window.Tabs) do
                tab.Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
                tab.Frame.Visible = false
            end
            TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            TabFrame.Visible = true
            Window.ActiveTab = tabName
        end)

        function Tab:CreateButton(btnName, callback)
            local Button = Instance.new("TextButton")
            Button.Name = "Button_" .. btnName
            Button.Parent = TabFrame
            Button.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
            Button.Size = UDim2.new(0, 280, 0, 30)
            Button.Font = Enum.Font.Gotham
            Button.Text = btnName
            Button.TextColor3 = Color3.fromRGB(255, 255, 255)
            Button.TextSize = 14
            Button.BackgroundTransparency = 0
            Button.BorderSizePixel = 0
            local Padding = Instance.new("UIPadding")
            Padding.Parent = Button
            Padding.PaddingLeft = UDim.new(0, 10)
            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 4)
            UICorner.Parent = Button

            Button.MouseButton1Click:Connect(callback)
            return Button
        end

        function Tab:CreateSlider(label, min, max, default, callback)
            local SliderFrame = Instance.new("Frame")
            local SliderLabel = Instance.new("TextLabel")
            local SliderBar = Instance.new("TextButton")
            local SliderValue = Instance.new("TextLabel")

            SliderFrame.Name = "Slider_" .. label
            SliderFrame.Parent = TabFrame
            SliderFrame.BackgroundTransparency = 1
            SliderFrame.Size = UDim2.new(0, 280, 0, 50)

            SliderLabel.Name = "SliderLabel"
            SliderLabel.Parent = SliderFrame
            SliderLabel.BackgroundTransparency = 1
            SliderLabel.Size = UDim2.new(1, 0, 0, 15)
            SliderLabel.Font = Enum.Font.Gotham
            SliderLabel.Text = label
            SliderLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderLabel.TextSize = 14

            SliderBar.Name = "SliderBar"
            SliderBar.Parent = SliderFrame
            SliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
            SliderBar.Size = UDim2.new(1, -20, 0, 10)
            SliderBar.Position = UDim2.new(0, 10, 0, 20)
            SliderBar.AutoButtonColor = false
            SliderBar.BorderSizePixel = 0
            local BarCorner = Instance.new("UICorner")
            BarCorner.CornerRadius = UDim.new(0, 4)
            BarCorner.Parent = SliderBar

            SliderValue.Name = "SliderValue"
            SliderValue.Parent = SliderFrame
            SliderValue.BackgroundTransparency = 1
            SliderValue.Size = UDim2.new(0, 50, 0, 15)
            SliderValue.Position = UDim2.new(1, -60, 0, 20)
            SliderValue.Font = Enum.Font.Gotham
            SliderValue.Text = tostring(default)
            SliderValue.TextColor3 = Color3.fromRGB(255, 255, 255)
            SliderValue.TextSize = 14

            local function updateSlider(x)
                local percent = math.clamp((x - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                local value = math.floor(min + (max - min) * percent)
                SliderValue.Text = tostring(value)
                callback(value)
            end

            SliderBar.MouseButton1Down:Connect(function(x)
                updateSlider(x.Position.X)
                local moveConnection
                local upConnection
                moveConnection = game:GetService("UserInputService").InputChanged:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseMovement then
                        updateSlider(input.Position.X)
                    end
                end)
                upConnection = game:GetService("UserInputService").InputEnded:Connect(function(input)
                    if input.UserInputType == Enum.UserInputType.MouseButton1 then
                        moveConnection:Disconnect()
                        upConnection:Disconnect()
                    end
                end)
            end)

            callback(default)
            return SliderFrame
        end

        table.insert(Window.Tabs, {Name = tabName, Button = TabButton, Frame = TabFrame})
        if not Window.ActiveTab then
            Window.ActiveTab = tabName
            TabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
            TabFrame.Visible = true
        end
        return Tab
    end

    local WindowTab = Window:CreateTab("Home")
    WindowTab:CreateButton("Toggle GUI", function() Main.Visible = not Main.Visible end)

    local ModsTab = Window:CreateTab("Mods")
    local modStates = {Aimbot = false}
    local fov = 100

    ModsTab:CreateButton("Aimbot", function()
        modStates.Aimbot = not modStates.Aimbot
        local player = game.Players.LocalPlayer
        local mouse = player:GetMouse()
        local userInputService = game:GetService("UserInputService")
        local runService = game:GetService("RunService")

        if modStates.Aimbot then
            local connection
            connection = runService.RenderStepped:Connect(function()
                if modStates.Aimbot and userInputService:IsMouseButtonPressed(Enum.UserInputType.MouseButton2) then
                    local maxDistance = math.huge
                    local target = nil
                    for _, plr in pairs(game.Players:GetPlayers()) do
                        if plr ~= player and plr.Character and plr.Character:FindFirstChild("Head") then
                            local head = plr.Character.Head
                            local screenPoint, onScreen = workspace.CurrentCamera:WorldToViewportPoint(head.Position)
                            local distance = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
                            if onScreen and distance < fov and distance < maxDistance then
                                maxDistance = distance
                                target = head
                            end
                        end
                    end
                    if target then
                        workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, target.Position)
                    end
                end
            end)
            spawn(function()
                while wait() do
                    if not modStates.Aimbot then
                        connection:Disconnect()
                        break
                    end
                end
            end)
        end
    end)

    ModsTab:CreateSlider("FOV", 50, 200, 100, function(value)
        fov = value
    end)

    local ScriptsTab = Window:CreateTab("Scripts")
    local scriptInput = Instance.new("TextBox")
    scriptInput.Name = "ScriptInput"
    scriptInput.Parent = ScriptsTab.Frame
    scriptInput.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    scriptInput.BorderSizePixel = 0
    scriptInput.Position = UDim2.new(0, 5, 0, 5)
    scriptInput.Size = UDim2.new(1, -10, 0, 200)
    scriptInput.Font = Enum.Font.Code
    scriptInput.Text = "-- Enter script URL or code here (e.g., https://raw.githubusercontent.com/KeelScripts/Keel6586/main/Lua)"
    scriptInput.TextColor3 = Color3.fromRGB(200, 200, 200)
    scriptInput.TextSize = 14
    scriptInput.TextWrapped = true
    scriptInput.MultiLine = true
    local InputCorner = Instance.new("UICorner")
    InputCorner.CornerRadius = UDim.new(0, 4)
    InputCorner.Parent = scriptInput

    local ExecuteButton = Instance.new("TextButton")
    ExecuteButton.Name = "ExecuteButton"
    ExecuteButton.Parent = ScriptsTab.Frame
    ExecuteButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ExecuteButton.Size = UDim2.new(0, 100, 0, 30)
    ExecuteButton.Position = UDim2.new(0, 10, 0, 210)
    ExecuteButton.Font = Enum.Font.Gotham
    ExecuteButton.Text = "Execute"
    ExecuteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ExecuteButton.TextSize = 14
    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 4)
    ButtonCorner.Parent = ExecuteButton

    ExecuteButton.MouseButton1Click:Connect(function()
        local scriptContent = scriptInput.Text
        if scriptContent:match("http") then
            local success, error = pcall(function()
                loadstring(game:HttpGet(scriptContent))()
            end)
            if not success then
                warn("Script Error: " .. error)
            end
        else
            local success, error = pcall(function()
                loadstring(scriptContent)()
            end)
            if not success then
                warn("Script Error: " .. error)
            end
        end
    end)

    Window:CreateTab("Random")
    Window:CreateTab("Plus")

    return Window
end

local Window = library:CreateWindow("Krypton Mods")
